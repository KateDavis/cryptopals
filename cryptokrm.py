import numpy as np
import re

english = {'a' : 8.127, 'b' : 1.492, 'c' : 2.782, 'd' : 4.253, 'e' : 12.702, 'f' : 2.228, 'g' : 2.015, 'h' : 6.094, 'i' : 6.966, 'j' : 0.153, 'k' : 0.747, 'l' : 4.025, 'm' : 2.406, 'n' : 6.749, 'o' : 7.507, 'p' : 1.929, 'q' : 0.095, 'r' : 5.987, 's' : 6.327, 't' : 9.056, 'u' : 2.758, 'v' : 1.037, 'w' : 2.365, 'x' : 0.150, 'y' : 1.974, 'z' : 0.074} 
# next values are taken from http://reusablesec.blogspot.com/2009/05/character-frequency-analysis-info.html
asciifreq = {
'a' :       7.52766,
'e' :       7.0925,
'o' :       5.17,
'r' :       4.96032,
'i' :       4.69732,
's' :       4.61079,
'n' :       4.56899,
'1' :       4.35053,
't' :       3.87388,
'l' :       3.77728,
'2' :       3.12312,
'm' :       2.99913,
'd' :       2.76401,
'0' :       2.74381,
'c' :       2.57276,
'p' :       2.45578,
'3' :       2.43339,
'h' :       2.41319,
'b' :       2.29145,
'u' :       2.10191,
'k' :       1.96828,
'4' :       1.94265,
'5' :       1.88577,
'g' :       1.85331,
'9' :       1.79558,
'6' :       1.75647,
'8' :       1.66225,
'7' :       1.621,
'y' :       1.52483,
'f' :       1.2476,
'w' :       1.24492,
'j' :       0.836677,
'v' :       0.833626,
'z' :       0.632558,
'x' :       0.573305,
'q' :       0.346119,
'A' :       0.130466,
'S' :       0.108132,
'E' :       0.0970865,
'R' :       0.08476,
'B' :       0.0806715,
'T' :       0.0801223,
'M' :       0.0782306,
'L' :       0.0775594,
'N' :       0.0748134,
'P' :       0.073715,
'O' :       0.0729217,
'I' :       0.070908,
'D' :       0.0698096,
'C' :       0.0660872,
'H' :       0.0544319,
'G' :       0.0497332,
'K' :       0.0460719,
'F' :       0.0417393,
'J' :       0.0363083,
'U' :       0.0350268,
'W' :       0.0320367,
'.' :       0.0316706,
'!' :       0.0306942,
'Y' :       0.0255073,
'*' :       0.0241648,
'@' :       0.0238597,
'V' :       0.0235546,
'-' :       0.0197712,
'Z' :       0.0170252,
'Q' :       0.0147064,
'X' :       0.0142182,
'_' :       0.0122655,
'$' :       0.00970255,
'#' :       0.00854313,
',' :       0.00323418,
'/' :       0.00311214,
'+' :       0.00231885,
'?' :       0.00207476,
';' :       0.00207476,
'^' :       0.00195272,
' ' :       0.00189169,
'%' :       0.00170863,
'~' :       0.00152556,
'=' :       0.00140351,
'&' :       0.00134249,
'`' :       0.00115942,
'\\' :       0.00115942,
')' :       0.00115942,
']' :       0.0010984,
'[' :       0.0010984,
':' :       0.000549201,
'<' :       0.000427156,
'(' :       0.000427156,
'æ' :       0.000183067,
'>' :       0.000183067,
'"' :       0.000183067,
'ü' :       0.000122045,
'|' :       0.000122045,
'{' :       0.000122045,
'\'' :       0.000122045,
'ö' :       6.10223e-05,
'ä' :       6.10223e-05,
'}' :       6.10223e-0 }

nullfreq = {'a' : 0, 'b' : 0, 'c' : 0, 'd' : 0, 'e' : 0, 'f' : 0, 'g' : 0, 'h' : 0, 'i' : 0, 'j' : 0, 'k' : 0, 'l' : 0, 'm' : 0, 'n' : 0, 'o' : 0, 'p' : 0, 'q' : 0, 'r' : 0, 's' : 0, 't' : 0, 'u' : 0, 'v' : 0, 'w' : 0, 'x' : 0, 'y' : 0, 'z' : 0} 

def xor(s1, s2):
    if len(s1)==len(s2):
        return ''.join(chr(ord(a) ^ ord(b)) for a,b in zip(s1,s2))
    return False

def xorstr(message, key):
    if len(key) < len(message):
        ekey = (key * (len(message)/len(key)+1))[:len(message)]
    else:
        ekey = key

    return xor(message,ekey)

def hamming_dist(s1,s2):
    s = xor(s1,s2)
    bits = 0

    if s: # they are in fact the same length
        for c in s:
            bits += sum(bit == '1' for bit in bin(ord(c))[2:]) 
        return bits
    else:
        return False

def cos_sim(v1, v2): 
    return np.dot(v1, v2) / (np.sqrt(np.dot(v1, v1)) * np.sqrt(np.dot(v2, v2)))

def frequency(message):
    freq = nullfreq # prepopulate

    data = re.sub('[^a-z]','',message.lower()) # all we care about are letters
    for char in data:
        freq[char] = data.count(char) 

    length = len(data) 
    total = 0

    for x in freq: # iterate over keys
        if length > 0:
            freq[x] = (float(freq[x]) / length) * 100.0
        else:
            freq[x] = float(0)

    return freq


